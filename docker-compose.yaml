services:
  database:
    platform: "linux/x86_64"
    container_name: "mysql_db"
    image: mysql:latest
    ports:
      - "3306:3306"
    env_file:
      - path: ./config_files/db/db.env
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "--password=$MYSQL_ROOT_PASSWORD"
        ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 1m
      start_interval: 10s
    volumes:
      - ./docker/db/entrypoint.sh:/docker-entrypoint-initdb.d/init_db.sh
      - ./docker/db/insert_app_version_default_record.sql:/init_sql/insert_app_version_default_record.sql
    networks:
      - "mynet"
  api:
    container_name: api
    build:
      context: ./
      dockerfile: ./docker/app/dockerfile.app
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - "mynet"
    volumes:
      - ./config_files/api:/app/config_files/api
      - ./data:/app/data
    restart: unless-stopped
networks:
  mynet:
    driver: "bridge"
